package trans.server;

import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.DataInputStream;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.net.Socket;

public class Receive
{
	InputStream is;
	BufferedInputStream bis;
	DataInputStream dis;
	FileOutputStream fos;
	BufferedOutputStream bos;
	
	Socket socket;
	
	String source;
	
	public Receive (Socket socket, String sourcePath)
	{
		this.socket = socket;
		this.source = sourcePath;
		
		try
		{
			is = socket.getInputStream();
			
			bis = new BufferedInputStream(is);
			dis = new DataInputStream(bis);
			
		} catch (IOException e)
		{
			System.out.println(e.toString());
		}
		
	}
	
	public void existDir(String path)
	{
		File file = new File(path);
		
		if (!file.exists())
			file.mkdirs();
	}
	
	public void getInfo()
	{
		String fileName, path;
		long fileSize;
		
		try
		{
			path = getDirPath(dis.readUTF());
			
			File file = new File(path);
			
			if (!file.isDirectory())
			{
				fileName = dis.readUTF();
				fileSize = dis.readLong();
				
				File newFile = copy(file);
			}
			else
			{
				file.mkdirs();
			}
		} catch (IOException e)
		{
			System.out.println(e.toString());
		}		
	}
	
	public String getDirPath(String path)
	{
		return new StringBuffer(source).append(path).toString();
	}
	
	public File copy(File file)
	{
		File newFile;
		
		try
		{
			fos = new FileOutputStream(file);
			bos = new BufferedOutputStream(fos);
			
			int data = -1;
			
			byte[] bytes = new byte[1024];
			
			while ((data = dis.read(bytes)) != -1)
			{
				bos.write(bytes, 0, data);
			}
			bos.flush();
			
		} catch (FileNotFoundException e)
		{
			System.out.println(e.toString());
		} catch (IOException e) {
			System.out.println(e.toString());
		} 
		finally {
			newFile = file;
		}
		return newFile;
	}
	
	public void copy(String path)
	{
		File file = new File(currentPath);
		
		if (!file.isDirectory())
		{
			try
			{
				bis = new BufferedInputStream(is);
				dis = new DataInputStream(bis);
				
				fos = new FileOutputStream(file);
				bos = new BufferedOutputStream(fos);
				
				
				String fileName = dis.readUTF();
				long fileSize = dis.readLong();
				
				System.out.println(fileName);
				System.out.println(fileSize);
				
				int data = -1;
				
				byte[] bytes = new byte[1024];
				
				while ((data = dis.read(bytes)) != -1)
				{
					bos.write(bytes, 0, data);
				}
				bos.flush();
				
				System.out.println("클라이언트와 파일 이름이 같은가? "+fileName.equals(file.getName()));
				System.out.println("클라이언트와 파일 크기가 같은가? "+ (fileSize==file.length()));
				
			} catch (FileNotFoundException e)
			{
				
			} catch (IOException e)
			{
				// TODO Auto-generated catch block
				e.printStackTrace();
			} finally {
				closeStream();
			}
		}
	}
	
	public void closeStream()
	{
		try
		{
			if(dis != null) dis.close();
			if(bis != null)	bis.close();
			//if(is != null)	is.close();
			
			if(bos != null)	bos.close();
			if(fos != null)	fos.close();
			
		} catch (IOException e)
		{
			System.out.println(e.toString());
		}
	}
}
