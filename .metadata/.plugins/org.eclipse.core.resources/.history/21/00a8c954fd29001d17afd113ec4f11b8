package trans.client;

import java.net.InetAddress;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.SynchronousQueue;
import java.util.concurrent.ThreadPoolExecutor;
import java.util.concurrent.TimeUnit;
import java.util.logging.Logger;


public class Client2
{
	private static ExecutorService executorService;
	private static ThreadPoolExecutor threadPoolExecutor;
	private static Logger logger;
	
	public static void main(String[] args) throws Exception
	{
		//long start, end;
		//start = System.currentTimeMillis();
		
		// 1. 초기 설정
		// 설정 파일, 로그 설정 파일
		Setting setting = new Setting();
		setting.loadProperties();
		setting.loadLogProperties();
		
		// Logger 객체
		logger = setting.getLogger();
		
		// 클라이언트 시작 알림
		StringBuffer sb = new StringBuffer();
		InetAddress local = InetAddress.getLocalHost();
		sb.append("client(");		
		sb.append(local.getHostAddress());
		sb.append(") starts");
		logger.info(sb.toString());
		
		// 스레드 풀 설정
		threadPoolExecutor = new ThreadPoolExecutor(
			setting.getMaxThread()
			, Runtime.getRuntime().availableProcessors()
			, 10L
			, TimeUnit.SECONDS
			, new SynchronousQueue<Runnable>()
		); 
		executorService = threadPoolExecutor;
		
		ClientTask clientTask = new ClientTask(setting, logger, executorService);
		
		// 디렉토리 생성
		clientTask.existDir(setting.getPath());
		
		// 파일 전송 작업
		clientTask.task("");
		
		
		// 파일이면 send
		
		// 
		
	}
}
