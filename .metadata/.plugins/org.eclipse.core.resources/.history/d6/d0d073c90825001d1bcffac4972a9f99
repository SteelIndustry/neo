package trans.client;

import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.OutputStream;
import java.net.InetSocketAddress;
import java.net.Socket;

public class OpenSocketStream
{
	Socket socket;
	
	OutputStream os;
	FileInputStream fis;
	BufferedInputStream bis;
	BufferedOutputStream bos;
	DataOutputStream dos;
	
	OpenSocketStream()
	{
		this.socket = new Socket();
	}
	
	public void connectSocket(String ip, int port)
	{
		try
		{
			socket.connect(new InetSocketAddress(ip, port));
		} catch (IOException e)
		{
			System.out.println(e.toString());
		}
	}
	
	public void openStream(String path)
	{
		try
		{
			os = socket.getOutputStream();
			
			fis = new FileInputStream(path);
			bis = new BufferedInputStream(fis);
			bos = new BufferedOutputStream(os);
			dos = new DataOutputStream(bos);
			
		} catch (FileNotFoundException e)
		{
			System.out.println(e.toString());
		} catch (IOException e)
		{
			System.out.println(e.toString());
		}
	}
	
	public void send(File file, String path)
	{
		try
		{
			dos.writeUTF(file.getName());
			dos.writeLong(file.length());		
			dos.writeUTF(path);
			
			int data = -1;
			byte[] bytes = new byte[1024];
			
			while ((data = bis.read(bytes)) != -1)
			{
				dos.write(bytes, 0, data);
			}
			dos.flush();
			
		} catch (IOException e)
		{
			System.out.println(e.toString());
		} finally {
			closeStream();
		}
	}
	
	
	public void closeSocket()
	{
		if (!socket.isClosed())
		{
			try
			{
				socket.close();
			} catch (IOException e)
			{
				System.out.println(e.toString());
			}
		}
		socket = null;
	}
	
	public void closeStream()
	{
		try
		{
			if(dos != null) dos.close();
			if(bos != null)	bos.close();
			if(bis != null)	bis.close();
			if(fis != null)	fis.close();
		} catch (IOException e)
		{
			System.out.println(e.toString());
		}
		dos = null;
		bos = null;
		bis = null;
		fis = null;
	}
	
}
