package trans.client;

import java.io.File;

public class Transfer
{
	private String source, ip;
	private int port;
	
	public Transfer (String sourcePath, String ip, int port)
	{
		this.source = sourcePath;
		this.ip = ip;
		this.port = port;
	}
	
	public void existDir()
	{
		File file = new File(source);
		
		if (!file.exists())
			file.mkdirs();
	}
	
	// 파일 탐색
	public void search() { search(""); }
	
	// 파일 탐색
	private void search(String path)
	{
		File source = new File(getCurrentPath(path));
		File[] contents = source.listFiles();
		
		for (File file : contents)
		{
			if(!file.isDirectory())
			{
				OpenSocketStream socket = new OpenSocketStream();
				
				socket.connectSocket(ip, port);
				
				socket.openStream(file.getPath());
				
				socket.send(file, path+"/"+file.getName());
				
				socket.closeSocket();
			}
			else
			{
				String newPath = new StringBuffer(path)
						.append("/").append(file.getName()).toString();
				
				search(newPath);
			}			
		}
		
		if (contents.length == 0)
		{
			OpenSocketStream socket = new OpenSocketStream();
			
			socket.connectSocket("localhost", 10304);
			
			socket.openStream(source.getPath());
			
			socket.send(path);
			
			socket.closeSocket();
		}
		
		
	}
	public String getAccuratePath(String pathName)
	{
		return new StringBuffer(source).append(pathName).toString();		
	}
}
