package trans.client;

import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.OutputStream;

public class Transfer
{
	OutputStream os;
	FileInputStream fis;
	BufferedInputStream bis;
	BufferedOutputStream bos;
	DataOutputStream dos;
	
	
	public Transfer (OutputStream os)
	{
		this.os = os;
		this.fis = null;
		this.bis = null;
		this.bos = null;
		this.dos = null;
	}
	
	public void existDir(String source)
	{
		File file = new File(source);
		
		if (!file.exists())
			file.mkdirs();
	}
	
	public void search(String currentPath)
	{
		File source = new File(currentPath);
		File[] contents = source.listFiles();
		
		for (File file : contents)
		{
			boolean isDir = file.isDirectory();
			
			openStream(file, isDir);
			
			try
			{
				if(!isDir)
				{
					
					
					dos.writeBoolean(isDir);
					
					dos.writeUTF(file.getName());
					dos.writeLong(file.length());
					
					
					int data = -1;
					
					byte[] bytes = new byte[1024];
					
					
					
					while ((data = bis.read(bytes)) != -1)
					{
						dos.write(bytes, 0, data);
					}
					dos.flush();
				}
				else
				{
					dos.writeBoolean(isDir);
					
					search(file.getPath());
				}
				
				
			} catch (IOException e)
			{
				System.out.println(e.toString());
			} finally {
				closeStream();
			}
			
		}
	}
	
	public void openStream(File file, boolean isDir)
	{
		try
		{
			if(!isDir)
			{
				fis = new FileInputStream(file);
				bis = new BufferedInputStream(fis);
				bos = new BufferedOutputStream(os);
				dos = new DataOutputStream(bos);
				
			}
			else
			{
				bos = new BufferedOutputStream(os);
				dos = new DataOutputStream(bos);
				
			}
		} catch (FileNotFoundException e)
		{
			System.out.println(e.toString());
		}
	}
	
	public void closeStream()
	{
		try
		{
			if(dos != null) dos.close();
			if(bos != null)	bos.close();
			//if(os != null)	os.close();
			
			if(bis != null)	bis.close();
			if(fis != null)	fis.close();
		} catch (IOException e)
		{
			System.out.println(e.toString());
		}
	}
}
