package trans.client;

import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.OutputStream;
import java.net.Socket;

public class Transfer
{
	OutputStream os;
	FileInputStream fis;
	BufferedInputStream bis;
	BufferedOutputStream bos;
	DataOutputStream dos;
	
	String source;
	
	public Transfer (String sourcePath)
	{
		this.source = sourcePath;
	}
	
	public Transfer (OutputStream os)
	{
		this.os = os;
		this.fis = null;
		this.bis = null;
		this.bos = null;
		this.dos = null;
		
		this.source = null;
	}
	
	public void existDir()
	{
		File file = new File(source);
		
		if (!file.exists())
			file.mkdirs();
	}
	
	public void search(String path)
	{
		File source = new File(getCurrentPath(path));
		File[] contents = source.listFiles();
		
		for (File file : contents)
		{
			boolean isDir = file.isDirectory();
			
			if(!isDir)
			{
				OpenSocketStream socket = new OpenSocketStream();
				
				socket.connectSocket("localhost", 10304);
				
				socket.openStream(file.getPath());
				
				socket.send(file, path+"/"+file.getName());
				
				socket.closeStream();
				
				socket.closeSocket();
			}
			else
			{
				String newPath = new StringBuffer(path)
						.append("/").append(file.getName()).toString();
				
				search(newPath);
			}			
		}
	}
		

	public String getSource()
	{
		return source;
	}
	
	public void setSource(String source)
	{
		this.source = source; 
	}

	public String getCurrentPath(String pathName)
	{
		return new StringBuffer(source).append(pathName).toString();		
	}
}
